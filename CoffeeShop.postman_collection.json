{
	"info": {
		"_postman_id": "de485ee9-64af-4c27-9c9f-794bab39b67a",
		"name": "CoffeeShop",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1710408"
	},
	"item": [
		{
			"name": "Coffees",
			"item": [
				{
					"name": "Get all coffees",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"      \"id\": {",
									"        \"type\": \"string\"",
									"      },",
									"      \"type\": {",
									"        \"type\": \"string\"",
									"      },",
									"      \"price\": {",
									"        \"type\": \"number\"",
									"      },",
									"      \"picture\": {",
									"        \"type\": \"string\",",
									"        \"format\": \"uri\"",
									"      },",
									"      \"amountOfCoffee\": {",
									"        \"type\": \"integer\"",
									"      },",
									"      \"timeToBrew\": {",
									"        \"type\": \"integer\"",
									"      }",
									"    },",
									"    \"required\": [\"id\", \"type\", \"price\", \"picture\", \"amountOfCoffee\", \"timeToBrew\"],",
									"    \"additionalProperties\": false",
									"  }",
									"};",
									"",
									"",
									"pm.test('Schema is valid', function () {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"for (var i = 0; i < jsonData.length; i++) {",
									"    if (jsonData[i].type === \"Espresso\") {",
									"        pm.environment.set(\"espressoId\", jsonData[i].id);",
									"        break;",
									"    }",
									"}",
									"",
									"for (var i = 0; i < jsonData.length; i++) {",
									"    if (jsonData[i].type === \"Espresso doppio\") {",
									"        pm.environment.set(\"doppioId\", jsonData[i].id);",
									"        break;",
									"    }",
									"}",
									"",
									"for (var i = 0; i < jsonData.length; i++) {",
									"    if (jsonData[i].type === \"Cappuccino\") {",
									"        pm.environment.set(\"cappuccino\", jsonData[i].id);",
									"        break;",
									"    }",
									"}",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.environment.set(\"coffeeCount\", jsonData.length);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}Coffees",
							"host": [
								"{{baseUrl}}Coffees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get coffee by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test('Check the new values', function() {",
									"    var type =pm.environment.get(\"type\");",
									"    pm.expect(jsonData.type).to.equal(type);",
									"  pm.expect(jsonData.price).to.equal(2);",
									"  pm.expect(jsonData.picture).to.equal(\"https://www.rush.edu/sites/default/files/styles/1542x868/public/media-images/Coffee_WebFeature.png?itok=ixU-qRs1\");",
									"  pm.expect(jsonData.amountOfCoffee).to.equal(2);",
									"  pm.expect(jsonData.timeToBrew).to.equal(2);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}Coffees/{{newCoffeeId}}",
							"host": [
								"{{baseUrl}}Coffees"
							],
							"path": [
								"{{newCoffeeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add coffee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var type = pm.variables.replaceIn(\"{{$randomFirstName}}\");",
									"pm.environment.set(\"type\", type);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"{{type}}\",\n  \"price\": 1,\n  \"picture\": \"https://www.rd.com/wp-content/uploads/2021/04/coffeequote-header.jpg?resize=1536%2C1536\",\n  \"amountOfCoffee\": 5,\n  \"timeToBrew\": 5\n}"
						},
						"url": {
							"raw": "{{baseUrl}}Coffees",
							"host": [
								"{{baseUrl}}Coffees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify coffee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var type = pm.variables.replaceIn(\"{{$randomFirstName}}\");",
									"pm.environment.set(\"type\", type);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"{{type}}\",\n  \"price\": 2,\n  \"picture\": \"https://www.rush.edu/sites/default/files/styles/1542x868/public/media-images/Coffee_WebFeature.png?itok=ixU-qRs1\",\n  \"amountOfCoffee\": 2,\n  \"timeToBrew\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}Coffees/{{newCoffeeId}}",
							"host": [
								"{{baseUrl}}Coffees"
							],
							"path": [
								"{{newCoffeeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove coffee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Coffees/{{coffeeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Coffees",
								"{{coffeeId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Get order by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = pm.response.json();",
									"tests[\"Check coffee type\"] = jsonData.coffeeType ===",
									"    pm.environment.get(\"type\");",
									"    tests[\"Check coffee price\"] = jsonData.price === 1;",
									"    tests[\"Check coffee status\"] = jsonData.isCompleted === false;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}Orders/{{toGo1}}",
							"host": [
								"{{baseUrl}}Orders"
							],
							"path": [
								"{{toGo1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place order ToGo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"orderId\", jsonData.orderId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coffeeId\": \"{{espresso}}\",\n  \"orderType\": \"ToGo\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place order AtTable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"orderId\", jsonData.orderId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coffeeId\": \"{{dopio}}\",\n  \"orderType\": \"AtTable\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}